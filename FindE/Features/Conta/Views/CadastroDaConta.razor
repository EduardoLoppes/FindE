@page "/CadastroDeConta"
@page "/CadastroDeConta/{IdConta:int}"
@using FindE.Features.Conta.Models
@inject FindE.Features.Conta.Services.ContaService contaService
@inject NavigationManager navigationManager
@inject IToastService toastService

<h4 style="padding-bottom: 10px;">Cadastro de conta</h4>
<EditForm Model="@Conta" style="max-width: 250px;" class="row g-2" OnValidSubmit="GravarConta">
    <div class="form-group">
        <label for="txtUsuario">Usuario</label>
        <input type="text" id="txtUsuario" class="form-control" @bind="@Conta.Usuario" autocomplete="off" required autofocus />
    </div>
    <div class="form-group" id="show_hide_password">
        <label for="txtSenha">Senha</label>
        <input type="password" id="txtSenha" class="form-control" @bind="@Conta.Senha" required />
    </div>
    <div class="form-group">
        <label for="cbxPerfil">Perfil</label>
        <InputSelect id="cbxPerfil" class="form-select" @bind-Value="@Conta.Perfil">
            @foreach (var perfil in Enum.GetValues(typeof(PerfilEnum)))
            {
                <option value="@perfil">@perfil</option>
            }
        </InputSelect>
    </div>
    <div>
        <div style="padding-top: 8px;" class="float-end">
            <button type="reset" class="btn btn-secondary" @onclick="Cancelar">Cancelar</button>
            <button type="submit" class="btn btn-success">Salvar</button>
        </div>
    </div>
</EditForm>

@code {
    [Parameter]
    public int IdConta { get; set; }
    private ContaModel Conta = new ContaModel();

    protected override async Task OnInitializedAsync()
    {
        if (IdConta > 0)
        {
            Conta = await contaService.RetornarConta(IdConta);
        }
    }

    private async Task GravarConta()
    {
        try
        {
            if (IdConta > 0)
            {
                await contaService.AlterarConta(Conta);
                toastService.ShowSuccess("Conta alterada com sucesso.", "Tudo ok!");
            }
            else
            {
                await contaService.InserirConta(Conta);
                toastService.ShowSuccess("Conta inserida com sucesso.", "Tudo ok!");
            }

            navigationManager.NavigateTo("/ListagemDeContas");
        }
        catch (Exception ex)
        {
            toastService.ShowError(ex.Message, "Erro ao cadastrar conta");
        }
    }

    private void Cancelar()
    {
        navigationManager.NavigateTo("/ListagemDeContas");
    }
}
