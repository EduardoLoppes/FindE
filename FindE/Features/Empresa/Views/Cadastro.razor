@page "/CadastroEmpresa"
@using FindE.Features.Empresa.Models
@inject FindE.Features.Empresa.Services.EmpresaService empresaService
@inject NavigationManager navigationManager
@inject IToastService toastService

<h4 style="padding-bottom: 10px;">Cadastro de empresa</h4>
<EditForm Model="@Empresa" style="max-width: 250px;" class="row g-2" OnValidSubmit="GravarEmpresa">
    <div class="form-group">
        <label for="txtNome">Nome</label>
        <input type="text" id="txtNome" class="form-control" @bind="@Empresa.Nome" autocomplete="off" required autofocus />
    </div>
    <div class="form-group">
        <label for="txtResponsavel">Responsável</label>
        <input type="text" id="txtResponsavel" class="form-control" @bind="@Empresa.Responsavel" autocomplete="off" required autofocus />
    </div>
    <div class="form-group">
        <label for="txtEmail">Email</label>
        <input type="text" id="txtEmail" class="form-control" @bind="@Empresa.Email" autocomplete="off" required autofocus />
    </div>
    <div class="form-group">
        <label for="txtWhatsapp">WhatsApp</label>
        <input type="text" id="txtWhatsapp" class="form-control" @bind="@Empresa.WhatsApp" autocomplete="off" required autofocus />
    </div>
    <div>
        <div style="padding-top: 8px;" class="float-end">
            <button type="reset" class="btn btn-secondary" @onclick="Cancelar">Cancelar</button>
            <button type="submit" class="btn btn-success">Salvar</button>
        </div>
    </div>
</EditForm>

@code {
    [Parameter]
    public int IdEmpresa { get; set; }
    private EmpresaModel Empresa = new EmpresaModel();

    protected override async Task OnInitializedAsync()
    {
        if (IdEmpresa > 0)
        {
            Empresa = await empresaService.RetornarEmpresa(IdEmpresa);
        }
    }

    private async Task GravarEmpresa()
    {
        try
        {
            if (IdEmpresa > 0)
            {
                await empresaService.AlterarEmpresa(Empresa);
                toastService.ShowSuccess("Empresa alterado com sucesso.", "Tudo ok!");
            }
            else
            {
                await empresaService.InserirEmpresa(Empresa);
                toastService.ShowSuccess("Empresa inserido com sucesso.", "Tudo ok!");
            }

            navigationManager.NavigateTo("/Listagem");
        }
        catch (Exception ex)
        {
            toastService.ShowError(ex.Message, "Erro ao cadastrar educador");
        }
    }

    private void Cancelar()
    {
        navigationManager.NavigateTo("/ListagemEmpresa");
    }
}
