// <auto-generated />
using System;
using FindE.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FindE.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.6");

            modelBuilder.Entity("FindE.Features.Candidato.Models.CandidatoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Anexo")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataDaCandidatura")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataDaFormacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("EstagiarioId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FormacaoAcademica")
                        .HasColumnType("TEXT");

                    b.Property<int>("StatusFomacao")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UsuarioGitHub")
                        .HasColumnType("TEXT");

                    b.Property<string>("UsuarioInstagram")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EstagiarioId");

                    b.ToTable("Candidato");
                });

            modelBuilder.Entity("FindE.Features.Conta.Models.ContaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Perfil")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Conta");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Perfil = 0,
                            Senha = "af023865c44e4fcf1fd229c1788f74f07e7fc518ea2b8c33c0f9d903bea6b3ff",
                            Usuario = "sistema"
                        });
                });

            modelBuilder.Entity("FindE.Features.Educador.Models.EducadorModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("MiniBio")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Educador");
                });

            modelBuilder.Entity("FindE.Features.Empresa.Models.EmpresaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Responsavel")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("WhatsApp")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Empresa");
                });

            modelBuilder.Entity("FindE.Features.Estagiario.Models.EstagiarioModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Curso")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataDeNascimento")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("WhatsApp")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Estagiario");
                });

            modelBuilder.Entity("FindE.Features.Candidato.Models.CandidatoModel", b =>
                {
                    b.HasOne("FindE.Features.Estagiario.Models.EstagiarioModel", "Estagiario")
                        .WithMany()
                        .HasForeignKey("EstagiarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estagiario");
                });
#pragma warning restore 612, 618
        }
    }
}
