@page "/"
@using FindE.Features.Conta.Models
@inject FindE.Features.Conta.Services.ContaService contaService

<PageTitle>Início</PageTitle>

<div class="container">
    <div class="row bg-light">
        <table class="table table-bordered">
            <thead class="thead-dark">
                <tr>
                    <th style="width: 80px" , valign="middle">Id</th>
                    <th>Usuário</th>
                    <th class="thBadgeCustom">Perfil</th>
                    <th>Ações</th>
                </tr>
            </thead>
            <tbody>
                @if (Contas.Any())
                {
                    @foreach (var conta in Contas)
                    {
                        <tr>
                            <td>@conta.Id</td>
                            <td>@conta.Usuario</td>
                            @if ((int)conta.Perfil == 1)
                            {
                                <td class="tdBadgeCustom"><span class="badge bg-warning text-white">Empresa</span></td>
                            }
                            else if ((int)conta.Perfil == 2)
                            {
                                <td class="tdBadgeCustom"><span class="badge bg-success text-white">Estagiário</span></td>
                            }
                            else
                            {
                                <td class="tdBadgeCustom"><span class="badge bg-dark text-white">Administrador</span></td>
                            }
                            <td class="align-middle">
                                <button type="button" class="btn btn-secondary btn-sm"
                                data-toggle="tooltip" data-placement="left" title="Alterar conta" @onclick="() => AlterarConta(conta)">
                                    <div class="bi bi-pencil"></div>
                                </button>
                                <button type="button" class="btn btn-danger btn-sm"
                                data-toggle="tooltip" data-placement="left" title="Apagar conta" @onclick="() => ApagarConta(conta)">
                                    <div class="bi bi-trash"></div>
                                </button>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr><td colspan="6"><strong>Nenhuma conta cadastrada</strong></td></tr>
                }
            </tbody>
        </table>
    </div>
    <div class="row m-5">
        <div class="col-5 bg-light m-2 justify-content-start">
            <div class="p-3 mb-3 bg-primary text-white text-center">Add New Product</div>
            <EditForm Model="@ContaParaInserir">
                <div class="form-group">
                    <label for="txtUsuario">Usuario</label>
                    <input type="text" id="txtUsuario" class="form-control" @bind="@ContaParaInserir.Usuario" />
                </div>
                <div class="form-group">
                    <label for="txtSenha">Senha</label>
                    <input type="password" id="txtSenha" class="form-control" @bind="@ContaParaInserir.Senha" />
                </div>
                <div class="form-group">
                    <label for="cbxPerfil">Perfil</label>
                    <select id="cbxPerfil" class="form-control" @bind="@ContaParaInserir.Perfil">
                        <option value="0">Administrador</option>
                        <option value="1">Empresa</option>
                        <option value="2">Estagiário</option>
                    </select>
                </div>
                <div class="text-center p-3 mb-3">
                    <button class="btn btn-info" @onclick="InserirConta"> Inserir conta</button>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code {

    List<ContaModel> Contas = new List<ContaModel>();

    protected override async Task OnInitializedAsync()
    {
        await ListarContas();
    }

    private async Task ListarContas()
    {
        Contas = await contaService.ListarContas();
    }

    public ContaModel ContaParaInserir { get; set; } = new ContaModel();

    private async Task InserirConta()
    {
        await contaService.InserirConta(ContaParaInserir);
        ContaParaInserir = new ContaModel();
        await ListarContas();
    }
    
    private async Task AlterarConta(ContaModel conta)
    {
        await contaService.AlterarConta(conta);
        await ListarContas();
    }

    private async Task ApagarConta(ContaModel conta)
    {
        await contaService.ApagarConta(conta);
        await ListarContas();
    }
}